#!/usr/bin/env node

const app = require('../app');
const https = require('https');
const fs = require('fs');
const path = require('path');

/**
 * Get port from environment and store in Express.
 */
const PORT = '8443';
app.set('port', PORT);

/**
 * Create HTTPS server.
 */
const server = https.createServer(
  {
    key: fs.readFileSync(path.join(__dirname, 'key.pem')),
    cert: fs.readFileSync(path.join(__dirname, 'key-cert.pem')),
  },
  app,
);

/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(PORT);

/**
* Event listener for HTTP server "error" event.
*/
server.on('error', (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      // eslint-disable-next-line
      console.error(`Port ${PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      // eslint-disable-next-line
      console.error(`Port ${PORT} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

/**
* Event listener for HTTP server "listening" event.
*/
server.on('listening', () => {
  // eslint-disable-next-line
  console.log(`Listening on port ${PORT}`);
});
